@page
@model HomeModel
@using API.Models;
@{
    ViewData["Title"] = "Quizlet Lite – Home";
    var accessToken = HttpContext?.Session.GetString("accessToken");
}

@{
    var recentQuizzesPaged = new List<Quiz> {
        new Quiz { Id = 1, Name = "Math Practice", CreatedOn = DateTime.Now.AddDays(-1) },
        new Quiz { Id = 2, Name = "Biology Review", CreatedOn = DateTime.Now.AddDays(-3) },
        new Quiz { Id = 3, Name = "History Quiz", CreatedOn = DateTime.Now.AddDays(-5) }
    };
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


@if (accessToken == null)
{
    <div class="text-center py-5">
        <h1 class="display-4 text-primary">🧠 Welcome to Quizlet Lite!</h1>
        <p class="lead">Hello! Ready to boost your learning today?</p>

        <hr class="my-4" />

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <h4 class="card-title">✨ Features You'll Love</h4>
                        <ul class="list-group list-group-flush text-start">
                            <li class="list-group-item">📁 Create and manage your own flashcard sets</li>
                            <li class="list-group-item">🔍 Explore public quizzes and study sets</li>
                            <li class="list-group-item">🧪 Test yourself in quiz mode</li>
                            <li class="list-group-item">⭐ Save your favorite sets for later</li>
                            <li class="list-group-item">📊 Track your learning progress</li>
                        </ul>

                        <div class="mt-4">
                            <a asp-page="/Auth/Register" class="btn btn-success me-2">
                                🟢
                                Start
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{


    
    <div class="py-5">
        <img src="..." id="userImgHome" class="rounded-circle me-3" style="width: 50px; height: 50px;" />
        <h2 class="text-primary m-0">🎉 Welcome, <span id="usernameSpanHome"></span>!</h2>

        <div class="row gy-4">
            <!-- Thống kê học tập -->
            <div class="col-md-6">
                <div class="card border-success shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">📊 Your Progress</h5>
                        <p class="card-text" id="quizStatsText">
                        </p>
                        <a asp-page="/Player/Stats" class="btn btn-outline-success">View Full Stats</a>
                    </div>
                </div>
            </div>

            <!-- Shortcut menu -->
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-body text-center">
                        <h5 class="card-title mb-3">🚀 Quick Access</h5>
                        <a asp-page="/Sets/Create" class="btn btn-success me-2">📁 Create Flashcards</a>
                        <a asp-page="/Quiz/QuizList" class="btn btn-outline-primary me-2">🔍 Explore Sets</a>
                    </div>
                </div>
            </div>

            <h5 class="mt-4">🕘 Recent Quizzes</h5>
            <div class="row" id="recentQuizList">
                @* @foreach (var quiz in recentQuizzesPaged)
                {
                    <div class="col-md-4 mb-2">
                        <div class="card shadow-sm h-100">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@quiz.Name</h5>
                                <p class="card-text text-muted">
                                    Created on @quiz.CreatedOn.ToShortDateString()
                                </p>
                                <a asp-page="/Player/Quiz" asp-route-id="@quiz.Id" class="btn btn-outline-primary mt-auto">Take Quiz</a>
                            </div>
                        </div>
                    </div>
                } *@
            </div>

            <h5 class="mt-4">🆕 New Quizzes</h5>
            <div class="row" id="newQuizzesHome">
                
            </div>
        </div>
    </div>

    <script>
        const token = "@Html.Raw(accessToken ?? "")";
        let currentUserId = null;

        async function loadInfo() {
            try {
                const res = await fetch("https://localhost:7245/api/authentication/me", {
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: "Bearer " + token
                    }
                });

                if (!res.ok) {
                    const msg = await res.text();
                    console.error("User info fetch failed:", res.status, msg);
                    return;
                }

                const user = await res.json();
                if (!user) return;
                currentUserId = user.id;

                // 📌 Hiển thị thông tin lên giao diện
                document.getElementById("usernameSpanHome").innerText = user.username;
                document.getElementById("userImgHome").src = user.avatar;
                            let sets = user.yourQuizCount ?? 0;
        let completed = user.completedQuizCount ?? 0;

        if (sets === 0 && completed === 0) {
            document.getElementById("quizStatsText").innerHTML =
                `You haven't created or completed any quiz yet. Start now to discover new knowledge! 🚀`;
        } else {
            document.getElementById("quizStatsText").innerHTML =
                `You've created <strong>${sets} sets</strong> and completed <strong>${completed} quizzes</strong> so far. Keep it up! 🎯`;
        }



            } catch (err) {
                console.error("User profile fetch error:", err.message);
            }
        }

        async function loadNewQuizzes(){
            try{
                const res = await fetch("https://localhost:7245/odata/QuizzesDto?$orderBy=CreatedOn desc&$top=3", {
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: "Bearer " + token
                    }
                });

                        if (!res.ok) {
            const msg = await res.text();

            switch (res.status) {
                case 400:
                    console.error("Bad Request: ", msg);
                    break;
                case 401:
                    console.error("Unauthorized: Token có thể hết hạn hoặc sai", msg);
                    break;
                case 403:
                    console.error("Forbidden: Không có quyền truy cập", msg);
                    break;
                case 404:
                    console.error("Not Found: Endpoint hoặc dữ liệu không tồn tại", msg);
                    break;
                case 500:
                    console.error("Internal Server Error: Backend gặp lỗi", msg);
                    break;
                default:
                    console.error("Quizzes fetch failed:", res.status, msg);
            }
            

            return;
        }
        const data = await res.json();
        const quizzes = data.value;
        console.log(quizzes);

        const container = document.getElementById("newQuizzesHome");
        container.innerHTML = ""; // clear old content

        quizzes.forEach(quiz => {
            const html = `
                <div class="col-md-4 mb-2">
                    <div class="card shadow-sm h-100">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">${quiz.Name}</h5>
                            <p class="card-text text-muted">
                                Added on ${new Date(quiz.CreatedOn).toLocaleDateString()}
                            </p>
                            <div class="mt-auto d-grid gap-2">
                <a href="/Quiz/QuizTaking?quizId=${quiz.Id}" class="btn btn-outline-primary">
                    <i class="fas fa-play-circle me-1"></i> Try Now
                </a>
                <a href="/Quiz/QuizPreview/${quiz.Id}" class="btn btn-outline-secondary">
                    <i class="fas fa-comment-dots me-1"></i> Learn
                </a>
            </div>


                        </div>
                    </div>
                </div>
            `;
            container.insertAdjacentHTML("beforeend", html);
        });
            }catch (err) {
                console.error("New quizzes fetch error:", err.message);
            }
        }

                async function loadRecentQuizzes() {
            try {
                const res = await fetch(`https://localhost:7245/odata/QuizAttemptDtos?$filter=UserId eq ${currentUserId}&$orderby=CompletedDate desc&$top=3`, {
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: "Bearer " + token
                    }
                });

                if (!res.ok) {
                    const msg = await res.text();
                    console.error("Recent quizzes fetch failed:", res.status, msg);
                    return;
                }

                const data = await res.json();
                const recentQuizzes = data.value ?? [];
                console.log(recentQuizzes);

                // 📌 Hiển thị danh sách quiz gần nhất
                        const container = document.getElementById("recentQuizList");
        container.innerHTML = "";

                if (recentQuizzes.length === 0) {
            container.innerHTML = `
                <div class="col-md-12">
                    <div class="alert alert-info text-center" role="alert">
                        You haven't completed any quizzes recently. Give one a try! 🎓
                    </div>
                </div>
            `;
            return;
        }

        recentQuizzes.forEach(q => {
            const card = document.createElement("div");
            card.className = "col-md-4 mb-2";
            card.innerHTML = `
                <div class="card shadow-sm h-100">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">${q.QuizName}</h5>
                        <p class="card-text text-muted">Completed on ${new Date(q.CompletedDate).toLocaleDateString()}</p>
                        <a href="/QuizAttempt/Details?id=${q.Id}" class="btn btn-outline-success mt-auto">Review</a>
                        <a href="/Player/Quiz?id=${q.QuizId}" class="btn btn-outline-primary mt-auto">Take Quiz Again</a>
                    </div>
                </div>
            `;
            container.appendChild(card);
        });

            } catch (err) {
                console.error("Recent quizzes fetch error:", err.message);
            }
        }


                document.addEventListener("DOMContentLoaded", async () => {
            await loadInfo();
            loadNewQuizzes();
            loadRecentQuizzes();
        });
    </script>
}
