@page
@model WebApp.Pages.Auth.ProfileModel

@{
    ViewData["Title"] = "Profile";
    // var user = HttpContextAccessor?.HttpContext?.Session.Get<UserDto>("userSession");
    // var token = HttpContextAccessor?.HttpContext?.Session.GetString("accessToken");
    var accessToken = HttpContext.Session.GetString("accessToken");
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
        const roleLabels = {
        0: "Admin",
        1: "User"
    };

    async function loadAndDisplayUserProfile() {
        // Ensure '@Html.Raw(accessToken ?? "")' is correctly replaced by your server-side rendering.
        const token = "@Html.Raw(accessToken ?? "")";

        // --- Token Validation ---
        if (!token || token.trim() === "" || token === "@accessToken") {
            console.warn("Token is missing, empty, or not properly rendered. Cannot fetch user profile.");

        }

        try {
            // --- API Call to Fetch User Data ---
            const response = await fetch("https://localhost:7245/api/authentication/me", {
                headers: {
                    "Content-Type": "application/json",
                    Authorization: "Bearer " + token
                }
            });

            // --- Error Handling for HTTP Responses ---
            if (!response.ok) {
                const errorMsg = await response.text(); 
                console.error(`User info fetch failed: Status ${response.status}, Error: ${errorMsg}`);

                switch (response.status) {
                    case 401:
                        alert("Unauthorized access. Please log in again.");
                        window.location.href = "/Auth/Login";
                        break;
                    case 403:
                        alert("Access forbidden. You do not have permission.");
                        window.location.href = "/Player/Home"; 
                        break;
                    case 404:
                        alert("User profile not found.");
                        break;
                    case 500:
                        alert("Server error occurred. Please try again later.");
                        break;
                    default:
                        alert(`An unexpected error occurred: ${response.status}`);
                        break;
                }
                return;
            }

            const user = await response.json(); 
            if (!user) {
                console.warn("No user data returned from the API.");
                return; 
            }

            console.log("User data loaded successfully:", user); 

            document.getElementById("avatarImgInfo").src = user.avatar || "/images/default-avatar.png";
            document.getElementById("usernameSpanInfo").innerText = user.username;
            document.getElementById("emailSpan").textContent = user.email;
            document.getElementById("roleBadge").textContent = roleLabels[user.role] || "Unknown Role";

            document.getElementById("usernameSpanInput").value = user.username;
            document.getElementById("emailSpanInput").value = user.email;

        } catch (err) {
            console.error("Failed to fetch user profile due to a network or unexpected error:", err.message);
            alert("Could not load user profile. Please check your internet connection or try again later.");
        }
    }

    loadAndDisplayUserProfile();
</script>

@section Scripts {


    <script>
        @if (TempData["ChangeAvatarSuccess"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Avatar Updated',
                        text: "@TempData["ChangeAvatarSuccess"]"
                    });
            </text>
        }

        @if (TempData["ChangePasswordSuccess"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Done',
                        text: "@TempData["ChangePasswordSuccess"]"
                    });
            </text>
        }

        @if (TempData["ChangeAvatarFailed"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Avatar Error',
                        text: "@TempData["ChangeAvatarFailed"]"
                    });
            </text>
        }

        @if (TempData["ChangePasswordFailed"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Password Error',
                        text: "@TempData["ChangePasswordFailed"]"
                    });
            </text>
        }

        @if (TempData["UpdateProfileSuccess"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Profile Updated',
                        text: "@TempData["UpdateProfileSuccess"]"
                    });
            </text>
        }

        @if (TempData["UpdateProfileError"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Update Failed',
                        text: "@TempData["UpdateProfileError"]"
                    });
            </text>
        }
    </script>
        
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-lg">
                <div class="card-body text-center">
                    <div class="position-relative d-inline-block">
                        <img id="avatarImgInfo" src=""
                             class="rounded-circle"
                             style="width: 120px; height: 120px; object-fit: cover; border: 3px solid #6c757d;" />

                        <button type="button"
                                class="btn btn-light rounded-circle position-absolute bottom-0 end-0 translate-middle shadow"
                                style="padding: 6px 9px; z-index: 2;"
                                onclick="openAvatarModal()">
                            <i class="bi bi-camera-fill text-dark"></i>
                        </button>
                    </div>

                    <h4 class="text-primary" id="usernameSpanInfo"></h4>
                    <p class="text-muted mb-1" id="emailSpan"></p>
                    <span class="badge bg-secondary" id="roleBadge"></span>

                    <hr class="my-4" />

                    <div class="d-grid gap-2 col-8 mx-auto">
                        <button type="button" class="btn btn-outline-primary" onclick="openUpdateProfileModal()">✏️ Update Profile</button>
                        <button type="button" class="btn btn-outline-danger" onclick="openChangePasswordModal()">🔒 Change Password</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="changeAvatarModal" tabindex="-1" aria-labelledby="changeAvatarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changeAvatarModalLabel">Update Avatar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" enctype="multipart/form-data" asp-page-handler="ChangeAvatar">
                    <div class="mb-3">
                        <label for="avatarInput" class="form-label">Select new image:</label>

                        <input type="file"
                               class="form-control"
                               id="avatarInput"
                               name="Avatar"
                               accept="image/*"
                               onchange="previewAvatar(this)"
                               required />

                    </div>
                    <div class="text-center">
                        <img id="avatarPreview" src="" style="max-width: 200px; display: none;" class="img-thumbnail" />
                    </div>
                    <div class="text-end mt-3">
                        <button type="submit" class="btn btn-success">Save change</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="ChangePassword">

                    <div class="mb-3">
                        <label for="CurrentPassword" class="form-label">Current Password</label>
                        <input type="password" class="form-control" id="CurrentPassword" name="CurrentPassword" required />
                    </div>

                    <div class="mb-3">
                        <label for="NewPassword" class="form-label">New Password</label>
                        <input type="password" class="form-control" id="NewPassword" name="NewPassword" required />
                    </div>

                    <div class="mb-3">
                        <label for="ConfirmNewPassword" class="form-label">Confirm New Password</label>
                        <input type="password" class="form-control" id="ConfirmNewPassword" name="ConfirmNewPassword" required />
                    </div>

                    <div class="text-end mt-3">
                        <button type="submit" class="btn btn-success">Update Password</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateProfileModal" tabindex="-1" aria-labelledby="updateProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateProfileModalLabel">Update Profile Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="UpdateProfile">

                    <div class="mb-3">
                        <label for="usernameSpanInput" class="form-label">Username</label>
                        <input type="text" id="usernameSpanInput" name="Username" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="emailSpanInput" class="form-label">Email</label>
                        <input type="email" id="emailSpanInput" name="Email" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="CurrentPasswordConfirm" class="form-label">Confirm with Current Password</label>
                        <input type="password" id="CurrentPasswordConfirm" name="CurrentPassword" class="form-control" />
                    </div>

                    <div class="text-end mt-3">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>


<script>
    function openChangePasswordModal() {
        const modal = new bootstrap.Modal(document.getElementById('changePasswordModal'));
        modal.show();
    }

    function openAvatarModal() {
      const modal = new bootstrap.Modal(document.getElementById('changeAvatarModal'));
      modal.show();
    }

    function previewAvatar(input) {
      const file = input.files[0];
      if (!file) return;

      const reader = new FileReader();
      reader.onload = function () {
        const img = document.getElementById('avatarPreview');
        img.src = reader.result;
        img.style.display = 'block';
      };
      reader.readAsDataURL(file);
    }

    function openUpdateProfileModal() {
        const modalElement = document.getElementById('updateProfileModal');
        const modal = new bootstrap.Modal(modalElement);
        modal.show();
    }
</script>