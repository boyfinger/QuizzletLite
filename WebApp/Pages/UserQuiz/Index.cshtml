@page
@model WebApp.Pages.UserQuiz.IndexModel
@{
    ViewData["Title"] = "Your Quizzes";
}

<h2>Your Quizzes</h2>

<div class="mb-3">
    <a href="/UserQuiz/Add" class="btn btn-success">Add New Quiz</a>
</div>

<div id="quizList" class="row gy-4 mt-3"></div>

<script>
    const token = '@Model.AccessToken';

    async function loadUserQuizzes() {
        if (!token) {
            document.getElementById("quizList").innerHTML = "<p class='text-danger'>Token not found in session.</p>";
            return;
        }

        const response = await fetch("https://localhost:7245/api/user/quizzes", {
            headers: {
                Authorization: "Bearer " + token
            }
        });

        if (!response.ok) {
            document.getElementById("quizList").innerHTML = "<p class='text-danger'>Failed to load quizzes.</p>";
            return;
        }

        const quizzes = await response.json();

        const container = document.getElementById("quizList");
        container.innerHTML = "";

        if (quizzes.length === 0) {
            container.innerHTML = "<p class='text-muted'>You haven't created any quizzes yet.</p>";
            return;
        }

        quizzes.forEach(quiz => {
            const isActive = quiz.isActive; // API phải trả về thuộc tính này
            const statusText = isActive ? "Active" : "Inactive";
            const btnClass = isActive ? "btn-success" : "btn-secondary";

            const card = `
                <div class="col-md-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">${quiz.name}</h5>
                            <p class="card-text text-muted">Created on ${new Date(quiz.createdOn).toLocaleDateString()}</p>
                            <p>Status: <span id="status-${quiz.id}">${statusText}</span></p>
                            <button class="btn ${btnClass} btn-sm mb-2" onclick="toggleActive(${quiz.id}, this)">
                                ${isActive ? "Deactivate" : "Activate"}
                            </button>
                            <a href="/UserQuiz/Detail/${quiz.id}" class="btn btn-outline-primary mt-auto">View Quiz</a>
                        </div>
                    </div>
                </div>`;
            container.innerHTML += card;
        });
    }

    async function toggleActive(quizId, btn) {
        const currentStatusSpan = document.getElementById(`status-${quizId}`);
        const currentIsActive = currentStatusSpan.textContent === "Active";

        const newStatus = !currentIsActive;

        try {
            const res = await fetch(`https://localhost:7245/api/user/quizzes/${quizId}/status`, {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + token
                },
                body: JSON.stringify({ isActive: newStatus })
            });

            if (!res.ok) throw new Error("Failed to update status");

            // Cập nhật UI
            currentStatusSpan.textContent = newStatus ? "Active" : "Inactive";
            btn.textContent = newStatus ? "Deactivate" : "Activate";
            btn.classList.toggle("btn-success", newStatus);
            btn.classList.toggle("btn-secondary", !newStatus);

            alert("Quiz status updated successfully!");
        } catch (err) {
            console.error(err);
            alert("Error updating quiz status.");
        }
    }

    loadUserQuizzes();
</script>
